/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface CreateCategory
 */
export interface CreateCategory {
  /**
   * The name of the new Category.
   * @type {string}
   * @memberof CreateCategory
   */
  name: string
  /**
   * The hex color to be displayed with the Category (for example, "#ff0000").
   * @type {string}
   * @memberof CreateCategory
   */
  color?: string
  /**
   * This field can be set to another unique ID. In the case that the Category has been imported from another tool, the ID in the other tool can be indicated here.
   * @type {string}
   * @memberof CreateCategory
   */
  externalId?: string
  /**
   * The type of entity this Category is associated with; currently Milestone is the only type of Category.
   * @type {string}
   * @memberof CreateCategory
   */
  type: CreateCategoryTypeEnum
}

/**
 * @export
 */
export const CreateCategoryTypeEnum = {
  Milestone: 'milestone',
} as const
export type CreateCategoryTypeEnum =
  (typeof CreateCategoryTypeEnum)[keyof typeof CreateCategoryTypeEnum]

/**
 * Check if a given object implements the CreateCategory interface.
 */
export function instanceOfCreateCategory(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'name' in value
  isInstance = isInstance && 'type' in value

  return isInstance
}

export function CreateCategoryFromJSON(json: any): CreateCategory {
  return CreateCategoryFromJSONTyped(json, false)
}

export function CreateCategoryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateCategory {
  if (json === undefined || json === null) {
    return json
  }
  return {
    name: json['name'],
    color: !exists(json, 'color') ? undefined : json['color'],
    externalId: !exists(json, 'external_id') ? undefined : json['external_id'],
    type: json['type'],
  }
}

export function CreateCategoryToJSON(value?: CreateCategory | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    name: value.name,
    color: value.color,
    external_id: value.externalId,
    type: value.type,
  }
}
