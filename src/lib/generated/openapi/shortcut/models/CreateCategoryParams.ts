/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request parameters for creating a Category with a Milestone.
 * @export
 * @interface CreateCategoryParams
 */
export interface CreateCategoryParams {
    /**
     * The name of the new Category.
     * @type {string}
     * @memberof CreateCategoryParams
     */
    name: string;
    /**
     * The hex color to be displayed with the Category (for example, "#ff0000").
     * @type {string}
     * @memberof CreateCategoryParams
     */
    color?: string;
    /**
     * This field can be set to another unique ID. In the case that the Category has been imported from another tool, the ID in the other tool can be indicated here.
     * @type {string}
     * @memberof CreateCategoryParams
     */
    externalId?: string;
}

/**
 * Check if a given object implements the CreateCategoryParams interface.
 */
export function instanceOfCreateCategoryParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function CreateCategoryParamsFromJSON(json: any): CreateCategoryParams {
    return CreateCategoryParamsFromJSONTyped(json, false);
}

export function CreateCategoryParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCategoryParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'externalId': !exists(json, 'external_id') ? undefined : json['external_id'],
    };
}

export function CreateCategoryParamsToJSON(value?: CreateCategoryParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'color': value.color,
        'external_id': value.externalId,
    };
}

