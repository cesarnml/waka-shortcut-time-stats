/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateLabelParams } from './CreateLabelParams';
import {
    CreateLabelParamsFromJSON,
    CreateLabelParamsFromJSONTyped,
    CreateLabelParamsToJSON,
} from './CreateLabelParams';

/**
 * 
 * @export
 * @interface CreateIteration
 */
export interface CreateIteration {
    /**
     * An array of UUIDs for any Members you want to add as Followers.
     * @type {Array<string>}
     * @memberof CreateIteration
     */
    followerIds?: Array<string>;
    /**
     * An array of UUIDs for any Groups you want to add as Followers. Currently, only one Group association is presented in our web UI.
     * @type {Array<string>}
     * @memberof CreateIteration
     */
    groupIds?: Array<string>;
    /**
     * An array of Labels attached to the Iteration.
     * @type {Array<CreateLabelParams>}
     * @memberof CreateIteration
     */
    labels?: Array<CreateLabelParams>;
    /**
     * The description of the Iteration.
     * @type {string}
     * @memberof CreateIteration
     */
    description?: string;
    /**
     * The name of this Iteration.
     * @type {string}
     * @memberof CreateIteration
     */
    name: string;
    /**
     * The date this Iteration begins, e.g. 2019-07-01.
     * @type {string}
     * @memberof CreateIteration
     */
    startDate: string;
    /**
     * The date this Iteration ends, e.g. 2019-07-01.
     * @type {string}
     * @memberof CreateIteration
     */
    endDate: string;
}

/**
 * Check if a given object implements the CreateIteration interface.
 */
export function instanceOfCreateIteration(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "startDate" in value;
    isInstance = isInstance && "endDate" in value;

    return isInstance;
}

export function CreateIterationFromJSON(json: any): CreateIteration {
    return CreateIterationFromJSONTyped(json, false);
}

export function CreateIterationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateIteration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'followerIds': !exists(json, 'follower_ids') ? undefined : json['follower_ids'],
        'groupIds': !exists(json, 'group_ids') ? undefined : json['group_ids'],
        'labels': !exists(json, 'labels') ? undefined : ((json['labels'] as Array<any>).map(CreateLabelParamsFromJSON)),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'name': json['name'],
        'startDate': json['start_date'],
        'endDate': json['end_date'],
    };
}

export function CreateIterationToJSON(value?: CreateIteration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'follower_ids': value.followerIds,
        'group_ids': value.groupIds,
        'labels': value.labels === undefined ? undefined : ((value.labels as Array<any>).map(CreateLabelParamsToJSON)),
        'description': value.description,
        'name': value.name,
        'start_date': value.startDate,
        'end_date': value.endDate,
    };
}

