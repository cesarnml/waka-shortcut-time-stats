/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateStoryLink
 */
export interface CreateStoryLink {
    /**
     * The type of link.
     * @type {string}
     * @memberof CreateStoryLink
     */
    verb: CreateStoryLinkVerbEnum;
    /**
     * The ID of the subject Story.
     * @type {number}
     * @memberof CreateStoryLink
     */
    subjectId: number;
    /**
     * The ID of the object Story.
     * @type {number}
     * @memberof CreateStoryLink
     */
    objectId: number;
}


/**
 * @export
 */
export const CreateStoryLinkVerbEnum = {
    Blocks: 'blocks',
    Duplicates: 'duplicates',
    RelatesTo: 'relates to'
} as const;
export type CreateStoryLinkVerbEnum = typeof CreateStoryLinkVerbEnum[keyof typeof CreateStoryLinkVerbEnum];


/**
 * Check if a given object implements the CreateStoryLink interface.
 */
export function instanceOfCreateStoryLink(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "verb" in value;
    isInstance = isInstance && "subjectId" in value;
    isInstance = isInstance && "objectId" in value;

    return isInstance;
}

export function CreateStoryLinkFromJSON(json: any): CreateStoryLink {
    return CreateStoryLinkFromJSONTyped(json, false);
}

export function CreateStoryLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateStoryLink {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'verb': json['verb'],
        'subjectId': json['subject_id'],
        'objectId': json['object_id'],
    };
}

export function CreateStoryLinkToJSON(value?: CreateStoryLink | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'verb': value.verb,
        'subject_id': value.subjectId,
        'object_id': value.objectId,
    };
}

