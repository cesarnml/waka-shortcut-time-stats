/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateTask
 */
export interface CreateTask {
    /**
     * The Task description.
     * @type {string}
     * @memberof CreateTask
     */
    description: string;
    /**
     * True/false boolean indicating whether the Task is completed. Defaults to false.
     * @type {boolean}
     * @memberof CreateTask
     */
    complete?: boolean;
    /**
     * An array of UUIDs for any members you want to add as Owners on this new Task.
     * @type {Array<string>}
     * @memberof CreateTask
     */
    ownerIds?: Array<string>;
    /**
     * Defaults to the time/date the Task is created but can be set to reflect another creation time/date.
     * @type {Date}
     * @memberof CreateTask
     */
    createdAt?: Date;
    /**
     * Defaults to the time/date the Task is created in Shortcut but can be set to reflect another time/date.
     * @type {Date}
     * @memberof CreateTask
     */
    updatedAt?: Date;
    /**
     * This field can be set to another unique ID. In the case that the Task has been imported from another tool, the ID in the other tool can be indicated here.
     * @type {string}
     * @memberof CreateTask
     */
    externalId?: string;
}

/**
 * Check if a given object implements the CreateTask interface.
 */
export function instanceOfCreateTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function CreateTaskFromJSON(json: any): CreateTask {
    return CreateTaskFromJSONTyped(json, false);
}

export function CreateTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
        'ownerIds': !exists(json, 'owner_ids') ? undefined : json['owner_ids'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'externalId': !exists(json, 'external_id') ? undefined : json['external_id'],
    };
}

export function CreateTaskToJSON(value?: CreateTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'complete': value.complete,
        'owner_ids': value.ownerIds,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'external_id': value.externalId,
    };
}

