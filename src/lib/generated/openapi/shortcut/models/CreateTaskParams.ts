/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request parameters for creating a Task on a Story.
 * @export
 * @interface CreateTaskParams
 */
export interface CreateTaskParams {
    /**
     * The Task description.
     * @type {string}
     * @memberof CreateTaskParams
     */
    description: string;
    /**
     * True/false boolean indicating whether the Task is completed. Defaults to false.
     * @type {boolean}
     * @memberof CreateTaskParams
     */
    complete?: boolean;
    /**
     * An array of UUIDs for any members you want to add as Owners on this new Task.
     * @type {Array<string>}
     * @memberof CreateTaskParams
     */
    ownerIds?: Array<string>;
    /**
     * Defaults to the time/date the Task is created but can be set to reflect another creation time/date.
     * @type {Date}
     * @memberof CreateTaskParams
     */
    createdAt?: Date;
    /**
     * Defaults to the time/date the Task is created in Shortcut but can be set to reflect another time/date.
     * @type {Date}
     * @memberof CreateTaskParams
     */
    updatedAt?: Date;
    /**
     * This field can be set to another unique ID. In the case that the Task has been imported from another tool, the ID in the other tool can be indicated here.
     * @type {string}
     * @memberof CreateTaskParams
     */
    externalId?: string;
}

/**
 * Check if a given object implements the CreateTaskParams interface.
 */
export function instanceOfCreateTaskParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function CreateTaskParamsFromJSON(json: any): CreateTaskParams {
    return CreateTaskParamsFromJSONTyped(json, false);
}

export function CreateTaskParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTaskParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
        'ownerIds': !exists(json, 'owner_ids') ? undefined : json['owner_ids'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'externalId': !exists(json, 'external_id') ? undefined : json['external_id'],
    };
}

export function CreateTaskParamsToJSON(value?: CreateTaskParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'complete': value.complete,
        'owner_ids': value.ownerIds,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'external_id': value.externalId,
    };
}

