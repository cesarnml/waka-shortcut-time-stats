/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomFieldValueParams
 */
export interface CustomFieldValueParams {
    /**
     * The unique public ID for the CustomField.
     * @type {string}
     * @memberof CustomFieldValueParams
     */
    fieldId: string;
    /**
     * The unique public ID for the CustomFieldEnumValue.
     * @type {string}
     * @memberof CustomFieldValueParams
     */
    valueId: string;
    /**
     * A literal value for the CustomField. Currently ignored.
     * @type {string}
     * @memberof CustomFieldValueParams
     */
    value?: string;
}

/**
 * Check if a given object implements the CustomFieldValueParams interface.
 */
export function instanceOfCustomFieldValueParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fieldId" in value;
    isInstance = isInstance && "valueId" in value;

    return isInstance;
}

export function CustomFieldValueParamsFromJSON(json: any): CustomFieldValueParams {
    return CustomFieldValueParamsFromJSONTyped(json, false);
}

export function CustomFieldValueParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomFieldValueParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldId': json['field_id'],
        'valueId': json['value_id'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function CustomFieldValueParamsToJSON(value?: CustomFieldValueParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field_id': value.fieldId,
        'value_id': value.valueId,
        'value': value.value,
    };
}

