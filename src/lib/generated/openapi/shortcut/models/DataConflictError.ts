/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * Error returned when Datomic tx fails due to Datomc :db.error/cas-failed error
 * @export
 * @interface DataConflictError
 */
export interface DataConflictError {
  /**
   *
   * @type {string}
   * @memberof DataConflictError
   */
  error: DataConflictErrorErrorEnum
  /**
   * An explanatory message: "The update failed due to a data conflict. Please refresh and try again."
   * @type {string}
   * @memberof DataConflictError
   */
  message: string
}

/**
 * @export
 */
export const DataConflictErrorErrorEnum = {
  DataConflictError: 'data-conflict-error',
} as const
export type DataConflictErrorErrorEnum =
  (typeof DataConflictErrorErrorEnum)[keyof typeof DataConflictErrorErrorEnum]

/**
 * Check if a given object implements the DataConflictError interface.
 */
export function instanceOfDataConflictError(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'error' in value
  isInstance = isInstance && 'message' in value

  return isInstance
}

export function DataConflictErrorFromJSON(json: any): DataConflictError {
  return DataConflictErrorFromJSONTyped(json, false)
}

export function DataConflictErrorFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DataConflictError {
  if (json === undefined || json === null) {
    return json
  }
  return {
    error: json['error'],
    message: json['message'],
  }
}

export function DataConflictErrorToJSON(value?: DataConflictError | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    error: value.error,
    message: value.message,
  }
}
