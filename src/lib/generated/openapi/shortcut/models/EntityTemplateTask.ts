/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * Request parameters for specifying how to pre-populate a task through a template.
 * @export
 * @interface EntityTemplateTask
 */
export interface EntityTemplateTask {
  /**
   * The Task description.
   * @type {string}
   * @memberof EntityTemplateTask
   */
  description: string
  /**
   * True/false boolean indicating whether the Task is completed. Defaults to false.
   * @type {boolean}
   * @memberof EntityTemplateTask
   */
  complete?: boolean
  /**
   * An array of UUIDs for any members you want to add as Owners on this new Task.
   * @type {Array<string>}
   * @memberof EntityTemplateTask
   */
  ownerIds?: Array<string>
  /**
   * This field can be set to another unique ID. In the case that the Task has been imported from another tool, the ID in the other tool can be indicated here.
   * @type {string}
   * @memberof EntityTemplateTask
   */
  externalId?: string
}

/**
 * Check if a given object implements the EntityTemplateTask interface.
 */
export function instanceOfEntityTemplateTask(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'description' in value

  return isInstance
}

export function EntityTemplateTaskFromJSON(json: any): EntityTemplateTask {
  return EntityTemplateTaskFromJSONTyped(json, false)
}

export function EntityTemplateTaskFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): EntityTemplateTask {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: json['description'],
    complete: !exists(json, 'complete') ? undefined : json['complete'],
    ownerIds: !exists(json, 'owner_ids') ? undefined : json['owner_ids'],
    externalId: !exists(json, 'external_id') ? undefined : json['external_id'],
  }
}

export function EntityTemplateTaskToJSON(value?: EntityTemplateTask | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    complete: value.complete,
    owner_ids: value.ownerIds,
    external_id: value.externalId,
  }
}
