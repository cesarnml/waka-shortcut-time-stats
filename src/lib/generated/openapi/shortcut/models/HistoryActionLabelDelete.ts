/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * An action representing a Label being deleted.
 * @export
 * @interface HistoryActionLabelDelete
 */
export interface HistoryActionLabelDelete {
  /**
   * The ID of the entity referenced.
   * @type {number}
   * @memberof HistoryActionLabelDelete
   */
  id: number
  /**
   * The type of entity referenced.
   * @type {string}
   * @memberof HistoryActionLabelDelete
   */
  entityType: string
  /**
   * The action of the entity referenced.
   * @type {string}
   * @memberof HistoryActionLabelDelete
   */
  action: HistoryActionLabelDeleteActionEnum
  /**
   * The name of the Label.
   * @type {string}
   * @memberof HistoryActionLabelDelete
   */
  name: string
}

/**
 * @export
 */
export const HistoryActionLabelDeleteActionEnum = {
  Delete: 'delete',
} as const
export type HistoryActionLabelDeleteActionEnum =
  (typeof HistoryActionLabelDeleteActionEnum)[keyof typeof HistoryActionLabelDeleteActionEnum]

/**
 * Check if a given object implements the HistoryActionLabelDelete interface.
 */
export function instanceOfHistoryActionLabelDelete(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'entityType' in value
  isInstance = isInstance && 'action' in value
  isInstance = isInstance && 'name' in value

  return isInstance
}

export function HistoryActionLabelDeleteFromJSON(json: any): HistoryActionLabelDelete {
  return HistoryActionLabelDeleteFromJSONTyped(json, false)
}

export function HistoryActionLabelDeleteFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HistoryActionLabelDelete {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: json['id'],
    entityType: json['entity_type'],
    action: json['action'],
    name: json['name'],
  }
}

export function HistoryActionLabelDeleteToJSON(value?: HistoryActionLabelDelete | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    entity_type: value.entityType,
    action: value.action,
    name: value.name,
  }
}
