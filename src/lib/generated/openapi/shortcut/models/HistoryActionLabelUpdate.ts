/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * An action representing a Label being updated.
 * @export
 * @interface HistoryActionLabelUpdate
 */
export interface HistoryActionLabelUpdate {
    /**
     * The ID of the entity referenced.
     * @type {number}
     * @memberof HistoryActionLabelUpdate
     */
    id: number;
    /**
     * The type of entity referenced.
     * @type {string}
     * @memberof HistoryActionLabelUpdate
     */
    entityType: string;
    /**
     * The action of the entity referenced.
     * @type {string}
     * @memberof HistoryActionLabelUpdate
     */
    action: HistoryActionLabelUpdateActionEnum;
}


/**
 * @export
 */
export const HistoryActionLabelUpdateActionEnum = {
    Update: 'update'
} as const;
export type HistoryActionLabelUpdateActionEnum = typeof HistoryActionLabelUpdateActionEnum[keyof typeof HistoryActionLabelUpdateActionEnum];


/**
 * Check if a given object implements the HistoryActionLabelUpdate interface.
 */
export function instanceOfHistoryActionLabelUpdate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "action" in value;

    return isInstance;
}

export function HistoryActionLabelUpdateFromJSON(json: any): HistoryActionLabelUpdate {
    return HistoryActionLabelUpdateFromJSONTyped(json, false);
}

export function HistoryActionLabelUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryActionLabelUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'entityType': json['entity_type'],
        'action': json['action'],
    };
}

export function HistoryActionLabelUpdateToJSON(value?: HistoryActionLabelUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'entity_type': value.entityType,
        'action': value.action,
    };
}

