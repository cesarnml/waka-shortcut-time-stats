/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { HistoryChangesStoryLink } from './HistoryChangesStoryLink'
import {
  HistoryChangesStoryLinkFromJSON,
  HistoryChangesStoryLinkFromJSONTyped,
  HistoryChangesStoryLinkToJSON,
} from './HistoryChangesStoryLink'

/**
 * An action representing a Story Link being updated.
 * @export
 * @interface HistoryActionStoryLinkUpdate
 */
export interface HistoryActionStoryLinkUpdate {
  /**
   * The ID of the entity referenced.
   * @type {number}
   * @memberof HistoryActionStoryLinkUpdate
   */
  id: number
  /**
   * The type of entity referenced.
   * @type {string}
   * @memberof HistoryActionStoryLinkUpdate
   */
  entityType: string
  /**
   * The action of the entity referenced.
   * @type {string}
   * @memberof HistoryActionStoryLinkUpdate
   */
  action: HistoryActionStoryLinkUpdateActionEnum
  /**
   * The verb describing the link's relationship.
   * @type {string}
   * @memberof HistoryActionStoryLinkUpdate
   */
  verb: HistoryActionStoryLinkUpdateVerbEnum
  /**
   * The Story ID of the subject Story.
   * @type {number}
   * @memberof HistoryActionStoryLinkUpdate
   */
  subjectId: number
  /**
   * The Story ID of the object Story.
   * @type {number}
   * @memberof HistoryActionStoryLinkUpdate
   */
  objectId: number
  /**
   *
   * @type {HistoryChangesStoryLink}
   * @memberof HistoryActionStoryLinkUpdate
   */
  changes: HistoryChangesStoryLink
}

/**
 * @export
 */
export const HistoryActionStoryLinkUpdateActionEnum = {
  Update: 'update',
} as const
export type HistoryActionStoryLinkUpdateActionEnum =
  (typeof HistoryActionStoryLinkUpdateActionEnum)[keyof typeof HistoryActionStoryLinkUpdateActionEnum]

/**
 * @export
 */
export const HistoryActionStoryLinkUpdateVerbEnum = {
  Blocks: 'blocks',
  Duplicates: 'duplicates',
  RelatesTo: 'relates to',
} as const
export type HistoryActionStoryLinkUpdateVerbEnum =
  (typeof HistoryActionStoryLinkUpdateVerbEnum)[keyof typeof HistoryActionStoryLinkUpdateVerbEnum]

/**
 * Check if a given object implements the HistoryActionStoryLinkUpdate interface.
 */
export function instanceOfHistoryActionStoryLinkUpdate(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'entityType' in value
  isInstance = isInstance && 'action' in value
  isInstance = isInstance && 'verb' in value
  isInstance = isInstance && 'subjectId' in value
  isInstance = isInstance && 'objectId' in value
  isInstance = isInstance && 'changes' in value

  return isInstance
}

export function HistoryActionStoryLinkUpdateFromJSON(json: any): HistoryActionStoryLinkUpdate {
  return HistoryActionStoryLinkUpdateFromJSONTyped(json, false)
}

export function HistoryActionStoryLinkUpdateFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HistoryActionStoryLinkUpdate {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: json['id'],
    entityType: json['entity_type'],
    action: json['action'],
    verb: json['verb'],
    subjectId: json['subject_id'],
    objectId: json['object_id'],
    changes: HistoryChangesStoryLinkFromJSON(json['changes']),
  }
}

export function HistoryActionStoryLinkUpdateToJSON(
  value?: HistoryActionStoryLinkUpdate | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    entity_type: value.entityType,
    action: value.action,
    verb: value.verb,
    subject_id: value.subjectId,
    object_id: value.objectId,
    changes: HistoryChangesStoryLinkToJSON(value.changes),
  }
}
