/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 * An action representing a Task being created.
 * @export
 * @interface HistoryActionTaskCreate
 */
export interface HistoryActionTaskCreate {
  /**
   * The description of the Task.
   * @type {string}
   * @memberof HistoryActionTaskCreate
   */
  description: string
  /**
   * The type of entity referenced.
   * @type {string}
   * @memberof HistoryActionTaskCreate
   */
  entityType: string
  /**
   * An array of Member IDs that represent who has been mentioned in the Task.
   * @type {Array<string>}
   * @memberof HistoryActionTaskCreate
   */
  mentionIds?: Array<string>
  /**
   * An array of Groups IDs that represent which have been mentioned in the Task.
   * @type {Array<string>}
   * @memberof HistoryActionTaskCreate
   */
  groupMentionIds?: Array<string>
  /**
   * An array of Member IDs that represent the Task's owners.
   * @type {Array<string>}
   * @memberof HistoryActionTaskCreate
   */
  ownerIds?: Array<string>
  /**
   * The ID of the entity referenced.
   * @type {number}
   * @memberof HistoryActionTaskCreate
   */
  id: number
  /**
   * The action of the entity referenced.
   * @type {string}
   * @memberof HistoryActionTaskCreate
   */
  action: HistoryActionTaskCreateActionEnum
  /**
   * Whether or not the Task is complete.
   * @type {boolean}
   * @memberof HistoryActionTaskCreate
   */
  complete: boolean
  /**
   * A timestamp that represent's the Task's deadline.
   * @type {string}
   * @memberof HistoryActionTaskCreate
   */
  deadline?: string
}

/**
 * @export
 */
export const HistoryActionTaskCreateActionEnum = {
  Create: 'create',
} as const
export type HistoryActionTaskCreateActionEnum =
  (typeof HistoryActionTaskCreateActionEnum)[keyof typeof HistoryActionTaskCreateActionEnum]

/**
 * Check if a given object implements the HistoryActionTaskCreate interface.
 */
export function instanceOfHistoryActionTaskCreate(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'description' in value
  isInstance = isInstance && 'entityType' in value
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'action' in value
  isInstance = isInstance && 'complete' in value

  return isInstance
}

export function HistoryActionTaskCreateFromJSON(json: any): HistoryActionTaskCreate {
  return HistoryActionTaskCreateFromJSONTyped(json, false)
}

export function HistoryActionTaskCreateFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HistoryActionTaskCreate {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: json['description'],
    entityType: json['entity_type'],
    mentionIds: !exists(json, 'mention_ids') ? undefined : json['mention_ids'],
    groupMentionIds: !exists(json, 'group_mention_ids') ? undefined : json['group_mention_ids'],
    ownerIds: !exists(json, 'owner_ids') ? undefined : json['owner_ids'],
    id: json['id'],
    action: json['action'],
    complete: json['complete'],
    deadline: !exists(json, 'deadline') ? undefined : json['deadline'],
  }
}

export function HistoryActionTaskCreateToJSON(value?: HistoryActionTaskCreate | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    entity_type: value.entityType,
    mention_ids: value.mentionIds,
    group_mention_ids: value.groupMentionIds,
    owner_ids: value.ownerIds,
    id: value.id,
    action: value.action,
    complete: value.complete,
    deadline: value.deadline,
  }
}
