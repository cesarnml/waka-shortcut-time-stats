/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StoryHistoryChangeOldNewInt } from './StoryHistoryChangeOldNewInt';
import {
    StoryHistoryChangeOldNewIntFromJSON,
    StoryHistoryChangeOldNewIntFromJSONTyped,
    StoryHistoryChangeOldNewIntToJSON,
} from './StoryHistoryChangeOldNewInt';
import type { StoryHistoryChangeOldNewStr } from './StoryHistoryChangeOldNewStr';
import {
    StoryHistoryChangeOldNewStrFromJSON,
    StoryHistoryChangeOldNewStrFromJSONTyped,
    StoryHistoryChangeOldNewStrToJSON,
} from './StoryHistoryChangeOldNewStr';

/**
 * The changes that have occurred as a result of the action.
 * @export
 * @interface HistoryChangesStoryLink
 */
export interface HistoryChangesStoryLink {
    /**
     * 
     * @type {StoryHistoryChangeOldNewStr}
     * @memberof HistoryChangesStoryLink
     */
    verb?: StoryHistoryChangeOldNewStr;
    /**
     * 
     * @type {StoryHistoryChangeOldNewInt}
     * @memberof HistoryChangesStoryLink
     */
    objectId?: StoryHistoryChangeOldNewInt;
    /**
     * 
     * @type {StoryHistoryChangeOldNewInt}
     * @memberof HistoryChangesStoryLink
     */
    subjectId?: StoryHistoryChangeOldNewInt;
}

/**
 * Check if a given object implements the HistoryChangesStoryLink interface.
 */
export function instanceOfHistoryChangesStoryLink(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HistoryChangesStoryLinkFromJSON(json: any): HistoryChangesStoryLink {
    return HistoryChangesStoryLinkFromJSONTyped(json, false);
}

export function HistoryChangesStoryLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryChangesStoryLink {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'verb': !exists(json, 'verb') ? undefined : StoryHistoryChangeOldNewStrFromJSON(json['verb']),
        'objectId': !exists(json, 'object_id') ? undefined : StoryHistoryChangeOldNewIntFromJSON(json['object_id']),
        'subjectId': !exists(json, 'subject_id') ? undefined : StoryHistoryChangeOldNewIntFromJSON(json['subject_id']),
    };
}

export function HistoryChangesStoryLinkToJSON(value?: HistoryChangesStoryLink | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'verb': StoryHistoryChangeOldNewStrToJSON(value.verb),
        'object_id': StoryHistoryChangeOldNewIntToJSON(value.objectId),
        'subject_id': StoryHistoryChangeOldNewIntToJSON(value.subjectId),
    };
}

