/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A reference to a CustomField value asserted on a Story.
 * @export
 * @interface HistoryReferenceCustomFieldEnumValue
 */
export interface HistoryReferenceCustomFieldEnumValue {
    /**
     * The type of entity referenced.
     * @type {string}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    entityType: string;
    /**
     * The name as it is displayed to the user of the parent custom-field of this enum value.
     * @type {string}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    fieldName: string;
    /**
     * The custom-field enum value as a string.
     * @type {number}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    integerValue: number | null;
    /**
     * Whether or not the custom-field is enabled.
     * @type {boolean}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    fieldEnabled: boolean;
    /**
     * The ID of the entity referenced.
     * @type {object}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    id: object;
    /**
     * The type variety of the parent custom-field of this enum value.
     * @type {string}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    fieldType: string;
    /**
     * The public-id of the parent custom-field of this enum value.
     * @type {string}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    fieldId: string;
    /**
     * The custom-field enum value as a string.
     * @type {string}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    stringValue: string | null;
    /**
     * Whether or not the custom-field enum value is enabled.
     * @type {boolean}
     * @memberof HistoryReferenceCustomFieldEnumValue
     */
    enumValueEnabled: boolean | null;
}

/**
 * Check if a given object implements the HistoryReferenceCustomFieldEnumValue interface.
 */
export function instanceOfHistoryReferenceCustomFieldEnumValue(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "fieldName" in value;
    isInstance = isInstance && "integerValue" in value;
    isInstance = isInstance && "fieldEnabled" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "fieldType" in value;
    isInstance = isInstance && "fieldId" in value;
    isInstance = isInstance && "stringValue" in value;
    isInstance = isInstance && "enumValueEnabled" in value;

    return isInstance;
}

export function HistoryReferenceCustomFieldEnumValueFromJSON(json: any): HistoryReferenceCustomFieldEnumValue {
    return HistoryReferenceCustomFieldEnumValueFromJSONTyped(json, false);
}

export function HistoryReferenceCustomFieldEnumValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryReferenceCustomFieldEnumValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entityType': json['entity_type'],
        'fieldName': json['field_name'],
        'integerValue': json['integer_value'],
        'fieldEnabled': json['field_enabled'],
        'id': json['id'],
        'fieldType': json['field_type'],
        'fieldId': json['field_id'],
        'stringValue': json['string_value'],
        'enumValueEnabled': json['enum_value_enabled'],
    };
}

export function HistoryReferenceCustomFieldEnumValueToJSON(value?: HistoryReferenceCustomFieldEnumValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entity_type': value.entityType,
        'field_name': value.fieldName,
        'integer_value': value.integerValue,
        'field_enabled': value.fieldEnabled,
        'id': value.id,
        'field_type': value.fieldType,
        'field_id': value.fieldId,
        'string_value': value.stringValue,
        'enum_value_enabled': value.enumValueEnabled,
    };
}

