/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A group of calculated values for this Iteration.
 * @export
 * @interface IterationStats
 */
export interface IterationStats {
    /**
     * The total number of completed points in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numPointsDone: number;
    /**
     * The total number of documents related to an Iteration
     * @type {number}
     * @memberof IterationStats
     */
    numRelatedDocuments: number;
    /**
     * The average cycle time (in seconds) of completed stories in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    averageCycleTime?: number;
    /**
     * The total number of unstarted Stories in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numStoriesUnstarted: number;
    /**
     * The total number of started points in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numPointsStarted: number;
    /**
     * The total number of unstarted points in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numPointsUnstarted: number;
    /**
     * The total number of started Stories in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numStoriesStarted: number;
    /**
     * The total number of Stories with no point estimate.
     * @type {number}
     * @memberof IterationStats
     */
    numStoriesUnestimated: number;
    /**
     * The total number of backlog Stories in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numStoriesBacklog: number;
    /**
     * The average lead time (in seconds) of completed stories in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    averageLeadTime?: number;
    /**
     * The total number of backlog points in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numPointsBacklog: number;
    /**
     * The total number of points in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numPoints: number;
    /**
     * The total number of done Stories in this Iteration.
     * @type {number}
     * @memberof IterationStats
     */
    numStoriesDone: number;
}

/**
 * Check if a given object implements the IterationStats interface.
 */
export function instanceOfIterationStats(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "numPointsDone" in value;
    isInstance = isInstance && "numRelatedDocuments" in value;
    isInstance = isInstance && "numStoriesUnstarted" in value;
    isInstance = isInstance && "numPointsStarted" in value;
    isInstance = isInstance && "numPointsUnstarted" in value;
    isInstance = isInstance && "numStoriesStarted" in value;
    isInstance = isInstance && "numStoriesUnestimated" in value;
    isInstance = isInstance && "numStoriesBacklog" in value;
    isInstance = isInstance && "numPointsBacklog" in value;
    isInstance = isInstance && "numPoints" in value;
    isInstance = isInstance && "numStoriesDone" in value;

    return isInstance;
}

export function IterationStatsFromJSON(json: any): IterationStats {
    return IterationStatsFromJSONTyped(json, false);
}

export function IterationStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): IterationStats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'numPointsDone': json['num_points_done'],
        'numRelatedDocuments': json['num_related_documents'],
        'averageCycleTime': !exists(json, 'average_cycle_time') ? undefined : json['average_cycle_time'],
        'numStoriesUnstarted': json['num_stories_unstarted'],
        'numPointsStarted': json['num_points_started'],
        'numPointsUnstarted': json['num_points_unstarted'],
        'numStoriesStarted': json['num_stories_started'],
        'numStoriesUnestimated': json['num_stories_unestimated'],
        'numStoriesBacklog': json['num_stories_backlog'],
        'averageLeadTime': !exists(json, 'average_lead_time') ? undefined : json['average_lead_time'],
        'numPointsBacklog': json['num_points_backlog'],
        'numPoints': json['num_points'],
        'numStoriesDone': json['num_stories_done'],
    };
}

export function IterationStatsToJSON(value?: IterationStats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'num_points_done': value.numPointsDone,
        'num_related_documents': value.numRelatedDocuments,
        'average_cycle_time': value.averageCycleTime,
        'num_stories_unstarted': value.numStoriesUnstarted,
        'num_points_started': value.numPointsStarted,
        'num_points_unstarted': value.numPointsUnstarted,
        'num_stories_started': value.numStoriesStarted,
        'num_stories_unestimated': value.numStoriesUnestimated,
        'num_stories_backlog': value.numStoriesBacklog,
        'average_lead_time': value.averageLeadTime,
        'num_points_backlog': value.numPointsBacklog,
        'num_points': value.numPoints,
        'num_stories_done': value.numStoriesDone,
    };
}

