/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StoryContentsTask
 */
export interface StoryContentsTask {
    /**
     * Full text of the Task.
     * @type {string}
     * @memberof StoryContentsTask
     */
    description: string;
    /**
     * The number corresponding to the Task's position within a list of Tasks on a Story.
     * @type {number}
     * @memberof StoryContentsTask
     */
    position?: number;
    /**
     * True/false boolean indicating whether the Task has been completed.
     * @type {boolean}
     * @memberof StoryContentsTask
     */
    complete?: boolean;
    /**
     * An array of UUIDs of the Owners of this Task.
     * @type {Array<string>}
     * @memberof StoryContentsTask
     */
    ownerIds?: Array<string>;
    /**
     * This field can be set to another unique ID. In the case that the Task has been imported from another tool, the ID in the other tool can be indicated here.
     * @type {string}
     * @memberof StoryContentsTask
     */
    externalId?: string | null;
}

/**
 * Check if a given object implements the StoryContentsTask interface.
 */
export function instanceOfStoryContentsTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function StoryContentsTaskFromJSON(json: any): StoryContentsTask {
    return StoryContentsTaskFromJSONTyped(json, false);
}

export function StoryContentsTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoryContentsTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
        'ownerIds': !exists(json, 'owner_ids') ? undefined : json['owner_ids'],
        'externalId': !exists(json, 'external_id') ? undefined : json['external_id'],
    };
}

export function StoryContentsTaskToJSON(value?: StoryContentsTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'position': value.position,
        'complete': value.complete,
        'owner_ids': value.ownerIds,
        'external_id': value.externalId,
    };
}

