/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorySearchResult } from './StorySearchResult';
import {
    StorySearchResultFromJSON,
    StorySearchResultFromJSONTyped,
    StorySearchResultToJSON,
} from './StorySearchResult';

/**
 * The results of the Story search query.
 * @export
 * @interface StorySearchResults
 */
export interface StorySearchResults {
    /**
     * The total number of matches for the search query. The first 1000 matches can be paged through via the API.
     * @type {number}
     * @memberof StorySearchResults
     */
    total: number;
    /**
     * A list of search results.
     * @type {Array<StorySearchResult>}
     * @memberof StorySearchResults
     */
    data: Array<StorySearchResult>;
    /**
     * The URL path and query string for the next page of search results.
     * @type {string}
     * @memberof StorySearchResults
     */
    next: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof StorySearchResults
     */
    cursors?: Array<string>;
}

/**
 * Check if a given object implements the StorySearchResults interface.
 */
export function instanceOfStorySearchResults(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "next" in value;

    return isInstance;
}

export function StorySearchResultsFromJSON(json: any): StorySearchResults {
    return StorySearchResultsFromJSONTyped(json, false);
}

export function StorySearchResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorySearchResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': json['total'],
        'data': ((json['data'] as Array<any>).map(StorySearchResultFromJSON)),
        'next': json['next'],
        'cursors': !exists(json, 'cursors') ? undefined : json['cursors'],
    };
}

export function StorySearchResultsToJSON(value?: StorySearchResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'data': ((value.data as Array<any>).map(StorySearchResultToJSON)),
        'next': value.next,
        'cursors': value.cursors,
    };
}

