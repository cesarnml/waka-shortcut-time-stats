/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface UnusableEntitlementError
 */
export interface UnusableEntitlementError {
  /**
   * The tag for violating an entitlement action.
   * @type {string}
   * @memberof UnusableEntitlementError
   */
  reasonTag: UnusableEntitlementErrorReasonTagEnum
  /**
   * Short tag describing the unusable entitlement action taken by the user.
   * @type {string}
   * @memberof UnusableEntitlementError
   */
  entitlementTag: string
  /**
   * Message displayed to the user on why their action failed.
   * @type {string}
   * @memberof UnusableEntitlementError
   */
  message: string
}

/**
 * @export
 */
export const UnusableEntitlementErrorReasonTagEnum = {
  EntitlementViolation: 'entitlement-violation',
} as const
export type UnusableEntitlementErrorReasonTagEnum =
  (typeof UnusableEntitlementErrorReasonTagEnum)[keyof typeof UnusableEntitlementErrorReasonTagEnum]

/**
 * Check if a given object implements the UnusableEntitlementError interface.
 */
export function instanceOfUnusableEntitlementError(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'reasonTag' in value
  isInstance = isInstance && 'entitlementTag' in value
  isInstance = isInstance && 'message' in value

  return isInstance
}

export function UnusableEntitlementErrorFromJSON(json: any): UnusableEntitlementError {
  return UnusableEntitlementErrorFromJSONTyped(json, false)
}

export function UnusableEntitlementErrorFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UnusableEntitlementError {
  if (json === undefined || json === null) {
    return json
  }
  return {
    reasonTag: json['reason_tag'],
    entitlementTag: json['entitlement_tag'],
    message: json['message'],
  }
}

export function UnusableEntitlementErrorToJSON(value?: UnusableEntitlementError | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    reason_tag: value.reasonTag,
    entitlement_tag: value.entitlementTag,
    message: value.message,
  }
}
