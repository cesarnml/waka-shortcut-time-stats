/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateFile
 */
export interface UpdateFile {
    /**
     * The description of the file.
     * @type {string}
     * @memberof UpdateFile
     */
    description?: string;
    /**
     * The time/date that the file was uploaded.
     * @type {Date}
     * @memberof UpdateFile
     */
    createdAt?: Date;
    /**
     * The time/date that the file was last updated.
     * @type {Date}
     * @memberof UpdateFile
     */
    updatedAt?: Date;
    /**
     * The name of the file.
     * @type {string}
     * @memberof UpdateFile
     */
    name?: string;
    /**
     * The unique ID assigned to the Member who uploaded the file to Shortcut.
     * @type {string}
     * @memberof UpdateFile
     */
    uploaderId?: string;
    /**
     * An additional ID that you may wish to assign to the file.
     * @type {string}
     * @memberof UpdateFile
     */
    externalId?: string;
}

/**
 * Check if a given object implements the UpdateFile interface.
 */
export function instanceOfUpdateFile(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateFileFromJSON(json: any): UpdateFile {
    return UpdateFileFromJSONTyped(json, false);
}

export function UpdateFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'uploaderId': !exists(json, 'uploader_id') ? undefined : json['uploader_id'],
        'externalId': !exists(json, 'external_id') ? undefined : json['external_id'],
    };
}

export function UpdateFileToJSON(value?: UpdateFile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'name': value.name,
        'uploader_id': value.uploaderId,
        'external_id': value.externalId,
    };
}

