/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateLabel
 */
export interface UpdateLabel {
    /**
     * The new name of the label.
     * @type {string}
     * @memberof UpdateLabel
     */
    name?: string;
    /**
     * The new description of the label.
     * @type {string}
     * @memberof UpdateLabel
     */
    description?: string;
    /**
     * The hex color to be displayed with the Label (for example, "#ff0000").
     * @type {string}
     * @memberof UpdateLabel
     */
    color?: string | null;
    /**
     * A true/false boolean indicating if the Label has been archived.
     * @type {boolean}
     * @memberof UpdateLabel
     */
    archived?: boolean;
}

/**
 * Check if a given object implements the UpdateLabel interface.
 */
export function instanceOfUpdateLabel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateLabelFromJSON(json: any): UpdateLabel {
    return UpdateLabelFromJSONTyped(json, false);
}

export function UpdateLabelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLabel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
    };
}

export function UpdateLabelToJSON(value?: UpdateLabel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'color': value.color,
        'archived': value.archived,
    };
}

