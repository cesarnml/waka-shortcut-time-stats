/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateCategoryParams } from './CreateCategoryParams';
import {
    CreateCategoryParamsFromJSON,
    CreateCategoryParamsFromJSONTyped,
    CreateCategoryParamsToJSON,
} from './CreateCategoryParams';

/**
 * 
 * @export
 * @interface UpdateMilestone
 */
export interface UpdateMilestone {
    /**
     * The Milestone's description.
     * @type {string}
     * @memberof UpdateMilestone
     */
    description?: string;
    /**
     * A boolean indicating whether the Milestone is archived or not
     * @type {boolean}
     * @memberof UpdateMilestone
     */
    archived?: boolean;
    /**
     * A manual override for the time/date the Milestone was completed.
     * @type {Date}
     * @memberof UpdateMilestone
     */
    completedAtOverride?: Date | null;
    /**
     * The name of the Milestone.
     * @type {string}
     * @memberof UpdateMilestone
     */
    name?: string;
    /**
     * The workflow state that the Milestone is in.
     * @type {string}
     * @memberof UpdateMilestone
     */
    state?: UpdateMilestoneStateEnum;
    /**
     * A manual override for the time/date the Milestone was started.
     * @type {Date}
     * @memberof UpdateMilestone
     */
    startedAtOverride?: Date | null;
    /**
     * An array of IDs of Categories attached to the Milestone.
     * @type {Array<CreateCategoryParams>}
     * @memberof UpdateMilestone
     */
    categories?: Array<CreateCategoryParams>;
    /**
     * The ID of the Milestone we want to move this Milestone before.
     * @type {number}
     * @memberof UpdateMilestone
     */
    beforeId?: number;
    /**
     * The ID of the Milestone we want to move this Milestone after.
     * @type {number}
     * @memberof UpdateMilestone
     */
    afterId?: number;
}


/**
 * @export
 */
export const UpdateMilestoneStateEnum = {
    InProgress: 'in progress',
    ToDo: 'to do',
    Done: 'done'
} as const;
export type UpdateMilestoneStateEnum = typeof UpdateMilestoneStateEnum[keyof typeof UpdateMilestoneStateEnum];


/**
 * Check if a given object implements the UpdateMilestone interface.
 */
export function instanceOfUpdateMilestone(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateMilestoneFromJSON(json: any): UpdateMilestone {
    return UpdateMilestoneFromJSONTyped(json, false);
}

export function UpdateMilestoneFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMilestone {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
        'completedAtOverride': !exists(json, 'completed_at_override') ? undefined : (json['completed_at_override'] === null ? null : new Date(json['completed_at_override'])),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'startedAtOverride': !exists(json, 'started_at_override') ? undefined : (json['started_at_override'] === null ? null : new Date(json['started_at_override'])),
        'categories': !exists(json, 'categories') ? undefined : ((json['categories'] as Array<any>).map(CreateCategoryParamsFromJSON)),
        'beforeId': !exists(json, 'before_id') ? undefined : json['before_id'],
        'afterId': !exists(json, 'after_id') ? undefined : json['after_id'],
    };
}

export function UpdateMilestoneToJSON(value?: UpdateMilestone | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'archived': value.archived,
        'completed_at_override': value.completedAtOverride === undefined ? undefined : (value.completedAtOverride === null ? null : value.completedAtOverride.toISOString()),
        'name': value.name,
        'state': value.state,
        'started_at_override': value.startedAtOverride === undefined ? undefined : (value.startedAtOverride === null ? null : value.startedAtOverride.toISOString()),
        'categories': value.categories === undefined ? undefined : ((value.categories as Array<any>).map(CreateCategoryParamsToJSON)),
        'before_id': value.beforeId,
        'after_id': value.afterId,
    };
}

