/* tslint:disable */
/* eslint-disable */
/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface UpdateTask
 */
export interface UpdateTask {
  /**
   * The Task's description.
   * @type {string}
   * @memberof UpdateTask
   */
  description?: string
  /**
   * An array of UUIDs of the owners of this story.
   * @type {Array<string>}
   * @memberof UpdateTask
   */
  ownerIds?: Array<string>
  /**
   * A true/false boolean indicating whether the task is complete.
   * @type {boolean}
   * @memberof UpdateTask
   */
  complete?: boolean
  /**
   * Move task before this task ID.
   * @type {number}
   * @memberof UpdateTask
   */
  beforeId?: number
  /**
   * Move task after this task ID.
   * @type {number}
   * @memberof UpdateTask
   */
  afterId?: number
}

/**
 * Check if a given object implements the UpdateTask interface.
 */
export function instanceOfUpdateTask(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function UpdateTaskFromJSON(json: any): UpdateTask {
  return UpdateTaskFromJSONTyped(json, false)
}

export function UpdateTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTask {
  if (json === undefined || json === null) {
    return json
  }
  return {
    description: !exists(json, 'description') ? undefined : json['description'],
    ownerIds: !exists(json, 'owner_ids') ? undefined : json['owner_ids'],
    complete: !exists(json, 'complete') ? undefined : json['complete'],
    beforeId: !exists(json, 'before_id') ? undefined : json['before_id'],
    afterId: !exists(json, 'after_id') ? undefined : json['after_id'],
  }
}

export function UpdateTaskToJSON(value?: UpdateTask | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    description: value.description,
    owner_ids: value.ownerIds,
    complete: value.complete,
    before_id: value.beforeId,
    after_id: value.afterId,
  }
}
